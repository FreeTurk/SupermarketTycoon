/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

import org.gradle.jvm.tasks.Jar


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("com.google.code.gson:gson:2.11.0")
    implementation("com.google.guava:guava:33.3.1-jre")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.supermarkettycoon.Main"
}


tasks.register<Jar>("fatJar") {
    archiveClassifier.set("all") // The classifier for the output JAR file (e.g., myapp-all.jar)
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Include the main output of the project
    from(sourceSets.main.get().output)

    // Include runtime dependencies
    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.get()
            .filter { it.name.endsWith("jar") }
            .map { zipTree(it) }
    })

    // Set the Main-Class attribute (optional)
    manifest {
        attributes["Main-Class"] = "org.supermarkettycoon.Main"
    }
}

tasks.named("assemble") {
    dependsOn("fatJar")
}
